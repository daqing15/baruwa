#!/bin/sh

set -e

. /usr/share/debconf/confmodule
db_version 2.0 || [ $? -lt 30 ]

# create celeryd group
if ! getent group celeryd >/dev/null; then
        addgroup --system celeryd
fi

# create celeryd user
if ! getent passwd celeryd >/dev/null; then
        adduser --system --ingroup celeryd --home /var/lib/baruwa \
                --no-create-home --gecos "Baruwa Celery worker daemon" \
                --disabled-login celeryd
fi

chown -R celeryd:celeryd /var/log/baruwa
chown -R celeryd:celeryd /var/lib/baruwa

if [ "$1" = "configure" ]; then
    db_get baruwa/webserver_type
    webservers="$RET"
    restart=""

    for webserver in $webservers; do
	webserver=${webserver%,}
	test -x /usr/sbin/$webserver || continue

	case "$webserver" in
	    apache2)
		if [ -d /etc/$webserver/mods-enabled ]; then
			a2enmod wsgi >/dev/null || true
		fi
		;;
	esac

	case "$webserver" in
	    apache2)
		test -d /etc/$webserver/sites-available || continue
    		db_get baruwa/webserver/vhost
    		vhost=$RET
    		sed -i -e "s/baruwa-alpha.local/$vhost/" /etc/baruwa/apache.conf
		if [ ! -f /etc/$webserver/sites-available/baruwa -a ! -h /etc/$webserver/sites-available/baruwa ]; then
		    ln -s /etc/baruwa/apache.conf /etc/$webserver/sites-available/baruwa
		fi
		if [ -d /etc/$webserver/sites-enabled ]; then
			a2ensite baruwa >/dev/null
		fi
		restart="$restart $webserver"
		;;
	esac
    done


    db_get baruwa/mysql/configure
    if [ "$RET" = "true" ]; then

    	# get the answers to our questions
    	db_get baruwa/mysql/dbserver
    	dbserver=$RET
    	db_get baruwa/mysql/dbadmin
    	dbadmin=$RET
    	db_get baruwa/mysql/dbadmpass
    	dbadmpass=$RET
    	db_get baruwa/mysql/dbname
    	dbname=$RET
    	db_get baruwa/mysql/dbuser
    	dbuser=$RET
    	db_get baruwa/mysql/dbpass
    	dbpass=$RET
    	db_get baruwa/rabbitmq/mqhost
    	mqhost=$RET
        db_get baruwa/rabbitmq/mqvhost
        mqvhost=$RET
        db_get baruwa/rabbitmq/mquser
        mquser=$RET
        db_get baruwa/rabbitmq/mqpass
        mqpass=$RET
    	db_get baruwa/django/baruwauser
    	baruwauser=$RET
    	db_get baruwa/django/baruwapass
    	baruwapass=$RET
    	db_get baruwa/django/baruwaemail
    	baruwaemail=$RET

    	# create the database
    	. /usr/share/wwwconfig-common/mysql-createdb.sh
    	# create user
    	. /usr/share/wwwconfig-common/mysql-createuser.sh
    	# grant rights to db
    	TMPDEST=`mktemp -t $PACKAGE.XXXXXXXX`
    	echo "GRANT ALL ON $dbname.* TO $dbuser@$dbserver IDENTIFIED BY '$dbpass';" > "$TMPDEST"
    	sqlfile="$TMPDEST"
    	# run the grants
    	. /usr/share/wwwconfig-common/mysql-exec.sh
    	# remove credentials
    	rm -f $TMPDEST

        sed -i -e \
        "
        s/\('NAME': '\).*\(',\)/\1$dbname\2/;
        s/\('USER': '\).*\(',\)/\1$dbuser\2/;
        s/\('PASSWORD': '\).*\(',\)/\1$dbpass\2/;
        s/\('HOST': '\).*\(',\)/\1$dbserver\2/;
        s/\(BROKER_HOST = \"\).*\(\"\)/\1$mqhost\2/;
        s/\(BROKER_USER = \"\).*\(\"\)/\1$mquser\2/;
        s/\(BROKER_PASSWORD = \"\).*\(\"\)/\1$mqpass\2/;
        s/\(BROKER_VHOST = \"\).*\(\"\)/\1$mqvhost\2/;
        " /etc/baruwa/settings.py 
        # populate the database
        /usr/share/pyshared/baruwa/manage.py syncdb --noinput || true
        # create admin user
        export DJANGO_SETTINGS_MODULE=baruwa.settings
	    TMPDEST=`mktemp -t $PACKAGE.XXXXXXXX`
	    echo "import os" > "$TMPDEST"
	    echo "import sys" >> "$TMPDEST"
	    echo "os.environ['DJANGO_SETTINGS_MODULE'] = 'baruwa.settings'" >> "$TMPDEST"
	    echo "sys.path.append('/usr/share/pyshared')" >> "$TMPDEST"
	    echo "from django.contrib.auth.models import User" >> "$TMPDEST"
	    echo "from baruwa.accounts.models import UserProfile" >> "$TMPDEST"
	    echo "try:" >> "$TMPDEST"
	    echo "  User.objects.create_superuser('$baruwauser', '$baruwaemail', '$baruwapass')" >> "$TMPDEST"
	    echo "  user.save()" >> "$TMPDEST"
	    echo "  profile = user.get_profile()" >> "$TMPDEST"
	    echo "except UserProfile.DoesNotExist:" >> "$TMPDEST"
	    echo "  profile = UserProfile(user=user, account_type=1)" >> "$TMPDEST"
	    echo "  profile.save()" >> "$TMPDEST"
	    echo "except: pass" >> "$TMPDEST"
	    python "$TMPDEST" || true
	    rm -f $TMPDEST
        #db_reset baruwa/mysql/dbserver
    	db_reset baruwa/mysql/dbadmin
    	db_reset baruwa/mysql/dbadmpass
    	#db_reset baruwa/mysql/dbname
    	#db_reset baruwa/mysql/dbuser
    	#db_reset baruwa/mysql/dbpass
    	#db_reset baruwa/rabbitmq/mquser
    	#db_reset baruwa/rabbitmq/mqpass
    	#db_reset baruwa/django/baruwauser
    	db_reset baruwa/django/baruwapass
    	#db_reset baruwa/django/baruwaemail
    fi
    db_reset baruwa/mysql/configure
    db_stop
    # restart webserver
    for webserver in $restart; do
	webserver=${webserver%,}
	if [ -x /usr/sbin/invoke-rc.d ]; then
	    invoke-rc.d $webserver reload 3>/dev/null || true
	else
	    /etc/init.d/$webserver reload 3>/dev/null || true
	fi
    done
fi

#DEBHELPER#
